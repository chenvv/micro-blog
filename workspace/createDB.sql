SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';

CREATE SCHEMA IF NOT EXISTS `MicroBlogDB` DEFAULT CHARACTER SET utf8 COLLATE default collation ;
USE `MicroBlogDB`;

-- -----------------------------------------------------
-- Table `MicroBlogDB`.`ACCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`ACCOUNT` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`ACCOUNT` (
  `ACCOUNT_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT ,
  `ACCOUNT_NAME` VARCHAR(40) NOT NULL ,
  `ACCOUNT_PASSWORD` VARCHAR(160) NOT NULL ,
  `ACCOUNT_LEVEL` TINYINT UNSIGNED NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ACCOUNT_ID`) )
ENGINE = MyISAM;

CREATE FULLTEXT INDEX `NAME` ON `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_NAME` ASC, `ACCOUNT_PASSWORD` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`LOGIN_SESSIONS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`LOGIN_SESSIONS` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`LOGIN_SESSIONS` (
  `SESSION_ID` VARCHAR(32) NOT NULL ,
  `ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `USEFULL_LIFE` TIMESTAMP NULL ,
  PRIMARY KEY (`SESSION_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`LOGIN_SESSIONS` (`ACCOUNT_ID` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`ACCOUNT_INFO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`ACCOUNT_INFO` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`ACCOUNT_INFO` (
  `ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `REAL_NAME` VARCHAR(40) NULL ,
  `SEX` TINYINT UNSIGNED NOT NULL DEFAULT 0 ,
  `ADDRESS` VARCHAR(255) NULL ,
  `BIRTHDAY` TIMESTAMP NULL ,
  `HOMEPAGE` VARCHAR(255) NULL ,
  `ICON` INT NOT NULL DEFAULT 0 ,
  `DESCRIPTION` VARCHAR(400) NULL ,
  `MOBILE` VARCHAR(15) NULL ,
  `EMAIL_ADDRESS` VARCHAR(255) NOT NULL ,
  PRIMARY KEY (`ACCOUNT_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`ACCOUNT_INFO` (`ACCOUNT_ID` ASC) ;

CREATE FULLTEXT INDEX `EMAIL` ON `MicroBlogDB`.`ACCOUNT_INFO` (`EMAIL_ADDRESS` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`BLOG_SETTINGS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`BLOG_SETTINGS` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`BLOG_SETTINGS` (
  `ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `LANGUAGE` TINYINT UNSIGNED NOT NULL ,
  `TIME_ZONE` TINYINT NOT NULL ,
  `INFO_PUBLIC` TINYINT UNSIGNED NOT NULL ,
  `USED_THEME` TINYINT UNSIGNED NOT NULL ,
  `BACKGROUND_IMAGE` INT UNSIGNED NULL ,
  PRIMARY KEY (`ACCOUNT_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`BLOG_SETTINGS` (`ACCOUNT_ID` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`NOTICE_SETTINGS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`NOTICE_SETTINGS` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`NOTICE_SETTINGS` (
  `ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `FOLLOWED_NOTICE` TINYINT UNSIGNED NOT NULL ,
  `MESSAGE_NOTICE` TINYINT UNSIGNED NOT NULL ,
  `SYSTEM_NOTICE` TINYINT UNSIGNED NOT NULL ,
  `REPLIED_NOTICE` TINYINT UNSIGNED NOT NULL ,
  `FOLLOW_NEW_NOTICE` TINYINT UNSIGNED NOT NULL ,
  `FOLLOW_JOIN_NOTICE` TINYINT UNSIGNED NOT NULL ,
  `GROUP_INVITE_NOTICE` TINYINT UNSIGNED NOT NULL ,
  PRIMARY KEY (`ACCOUNT_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`NOTICE_SETTINGS` (`ACCOUNT_ID` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`GROUP_USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`GROUP_USERS` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`GROUP_USERS` (
  `GROUP_ID` INT UNSIGNED NOT NULL ,
  `ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `ADMIN` TINYINT UNSIGNED NULL ,
  PRIMARY KEY (`GROUP_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`GROUP_USERS` (`ACCOUNT_ID` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`GROUP`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`GROUP` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`GROUP` (
  `GROUP_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT ,
  `GROUP_NAME` VARCHAR(50) NOT NULL ,
  `SUFFIX_URL` VARCHAR(50) NOT NULL ,
  `DESCRIPTION` VARCHAR(1000) NULL ,
  `GROUP_ICON` INT UNSIGNED NULL ,
  `CREATE_TIME` TIMESTAMP NOT NULL ,
  `CREATE_ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `GROUP_PUBLIC` TINYINT UNSIGNED NOT NULL ,
  PRIMARY KEY (`GROUP_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`CREATE_ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`GROUP` (`CREATE_ACCOUNT_ID` ASC) ;

CREATE FULLTEXT INDEX `NAME` ON `MicroBlogDB`.`GROUP` (`GROUP_NAME` ASC, `SUFFIX_URL` ASC) ;

CREATE INDEX `TIME` ON `MicroBlogDB`.`GROUP` (`CREATE_TIME` ASC, `GROUP_PUBLIC` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`BLOGS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`BLOGS` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`BLOGS` (
  `BLOG_ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT ,
  `CREATE_ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `GROUP_BLOG` TINYINT UNSIGNED NOT NULL ,
  `GROUP_ID` INT UNSIGNED NOT NULL ,
  `BLOG_CONTENT` VARCHAR(280) NOT NULL ,
  `REPLY_BLOG_ID` BIGINT UNSIGNED NULL ,
  `CREATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`BLOG_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`CREATE_ACCOUNT_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`BLOGS` (`CREATE_ACCOUNT_ID` ASC) ;

CREATE INDEX `REPLYID` ON `MicroBlogDB`.`BLOGS` (`REPLY_BLOG_ID` ASC) ;

CREATE INDEX `ORDERBY` ON `MicroBlogDB`.`BLOGS` (`CREATE_TIME` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`FOLLOW`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`FOLLOW` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`FOLLOW` (
  `ACCOUNT_ID` INT UNSIGNED NOT NULL ,
  `FOLLOWED_ID` INT UNSIGNED NOT NULL ,
  PRIMARY KEY (`ACCOUNT_ID`, `FOLLOWED_ID`) ,
  CONSTRAINT `ACCOUNT`
    FOREIGN KEY (`ACCOUNT_ID` , `FOLLOWED_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` , `ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT` ON `MicroBlogDB`.`FOLLOW` (`ACCOUNT_ID` ASC, `FOLLOWED_ID` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`MESSGAES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`MESSGAES` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`MESSGAES` (
  `MESSAGE_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT ,
  `ADDRESSEE_ID` INT UNSIGNED NOT NULL ,
  `AUTHOR_ID` INT UNSIGNED NOT NULL ,
  `MESSAGE_CONTENT` VARCHAR(280) NOT NULL ,
  `CREATE_TIME` TIMESTAMP NOT NULL ,
  `READED_FLAG` TINYINT UNSIGNED NOT NULL DEFAULT 0 ,
  `REPLIED_FLAG` TINYINT UNSIGNED NOT NULL DEFAULT 0 ,
  PRIMARY KEY (`MESSAGE_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ADDRESSEE_ID` , `AUTHOR_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` , `ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`MESSGAES` (`ADDRESSEE_ID` ASC, `AUTHOR_ID` ASC) ;

CREATE INDEX `NORMAL` ON `MicroBlogDB`.`MESSGAES` (`CREATE_TIME` ASC, `READED_FLAG` ASC, `REPLIED_FLAG` ASC, `AUTHOR_ID` ASC) ;


-- -----------------------------------------------------
-- Table `MicroBlogDB`.`EVENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MicroBlogDB`.`EVENT` ;

CREATE  TABLE IF NOT EXISTS `MicroBlogDB`.`EVENT` (
  `EVENT_ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT ,
  `ADDRESSEE_ID` INT UNSIGNED NOT NULL ,
  `EVENT_TYPE` TINYINT UNSIGNED NOT NULL ,
  `AUTHER_ID` INT UNSIGNED NOT NULL ,
  `EVENT_QUANTITY` INT UNSIGNED NOT NULL ,
  PRIMARY KEY (`EVENT_ID`) ,
  CONSTRAINT `ACCOUNT_ID`
    FOREIGN KEY (`ADDRESSEE_ID` , `AUTHER_ID` )
    REFERENCES `MicroBlogDB`.`ACCOUNT` (`ACCOUNT_ID` , `ACCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;

CREATE INDEX `ACCOUNT_ID` ON `MicroBlogDB`.`EVENT` (`ADDRESSEE_ID` ASC, `AUTHER_ID` ASC) ;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
